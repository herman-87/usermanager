openapi: 3.0.3
info:
  title: "Keycloak Admin API"
  version: "latest"

servers:
  - url: "http://localhost:8080/admin/realms/ecommerce-reaml"
    description: "user management"
  - url: "http://localhost:8080/realms/ecommerce-reaml"
    description: "authenticate client"

paths:
  /protocol/openid-connect/token:
    post:
      tags:
        - "KeycloakAuth"
      summary: "Get Access Token using client credentials"
      operationId: "getToken"
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: "object"
              properties:
                grant_type:
                  type: "string"
                  example: "client_credentials"
                client_id:
                  type: "string"
                client_secret:
                  type: "string"
              required:
                - "grant_type"
                - "client_id"
                - "client_secret"
      responses:
        '200':
          description: "Token response"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
  /users:
    post:
      tags:
        - KeycloakAdminUser
      summary: Create a user
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: "User created"
  /users/{id}:
    get:
      tags:
        - "KeycloakAdminUser"
      summary: "Get user by ID"
      operationId: "getUserById"
      parameters:
        - in: "path"
          name: "id"
          required: true
          schema:
            type: "string"
      responses:
        '200':
          description: "User details"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      tags:
        - "KeycloakAdminUser"
      summary: "Update a user"
      operationId: "updateUser"
      parameters:
        - in: "path"
          name: "id"
          required: true
          schema:
            type: "string"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '204':
          description: "User updated"
    delete:
      tags:
        - "KeycloakAdminUser"
      summary: "Delete a user"
      operationId: "deleteUser"
      parameters:
        - in: "path"
          name: "id"
          required: true
          schema:
            type: "string"
      responses:
        '204':
          description: "User deleted"
components:
  schemas:
    User:
      type: "object"
      properties:
        id:
          type: "string"
        username:
          type: "string"
        email:
          type: "string"
        firstName:
          type: "string"
        lastName:
          type: "string"
        enabled:
          type: boolean
        emailVerified:
          type: boolean
        attributes:
          type: "object"
          additionalProperties:
            type: "array"
            items:
              type: "string"
        credentials:
          type: "array"
          items:
            $ref: "#/components/schemas/Credential"
    Credential:
      type: "object"
      properties:
        type:
          type: "string"
          example: "password"
        value:
          type: "string"
          format: "password"
        temporary:
          type: "boolean"
    TokenResponse:
      type: "object"
      properties:
        access_token:
          type: "string"
        expires_in:
          type: "integer"
        refresh_expires_in:
          type: "integer"
        token_type:
          type: string
        not_before_policy:
          type: "integer"
        scope:
          type: "string"
